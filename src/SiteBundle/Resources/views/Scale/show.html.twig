{% extends 'base.html.twig' %}
{% block body %}
<h1>{{ scale.name }}</h1>
<div id="container1">
    <div id="col1">
        <div>
            <h2>tagged as:</h2>
            <ul class="tagged">
                {% for descriptor in scale.descriptors %}
                    <li >
                        <a style="color: #{{ descriptor.color }}" href="{{ path('site_scale_descriptor_show',{descriptorName:descriptor.name,descriptorId:descriptor.id}) }}">{{ descriptor.name }}</a>
                    </li>
                {% endfor %}
            </ul>
        </div>

        <div>
            <h2>Intervals</h2>
            {%  for intervale in scale.intervales %}
                <span class="intervale" style="color: #{{  intervale.color }}">{{  intervale.name }}</span>
            {% endfor %}
        </div>

        <div>
            <h2>Diagram:</h2>
            <canvas id="diagram" width="180" height="180"></canvas>
            <script>
                var datas = {};
                {% for intervale in scale.intervales %}
                datas[{{ intervale.delta }}] = ["C","{{ intervale.name  }}","{{ intervale.color  }}"];
                {% endfor %}
                new diagram("diagram",datas);
            </script>
        </div>
        <div style="margin-right:50px;text-align: justify; ">
            <ul id="scaleList">All intervals matching scales  ({{ matchingScales|length }}):
                {% for scale in matchingScales %}
                    <li><a href="{{ path('site_scale_show',{ scale:scale.scaleName }) }}">{{ scale.scaleName }}</a></li>
                {% endfor %}
            </ul>
        </div>
        <h2>Scale in key:</h2>
        <ul id="populatedScale">
            {% for p in populatedScale %}
                <li>

                    <a  onclick="jnSynth.play('{{  p.digitAList }}','scale')"  href="#play">play</a>

                </li>
                <li>

                    <ul class="rootedPopulatedScale">
                        <span class="rootScaleName">{{ p.rootName }} {{ scale.name }}</span>
                        {% for tone in p.toneList|split(',') %}
                            <li>{{ tone }}</li>
                        {% endfor %}
                    </ul>

                </li>
            {% endfor %}

        </ul>
    </div>

</div>

{% endblock %}
!function(e,a){"function"==typeof define&&define.amd?define("Translator",a):"object"==typeof module&&module.exports?module.exports=a():e.Translator=a()}(this,function(){"use strict";function e(e,a){var s,n=d.placeHolderPrefix,c=d.placeHolderSuffix;for(s in a){var r=new RegExp(n+s+c,"g");r.test(e)&&(e=e.replace(r,a[s]))}return e}function a(e,a,n,c,r){var t=n||c||r,i=a;if(!(t in l)){if(!(r in l))return e;t=r}if("undefined"==typeof i||null===i)for(var u=0;u<f.length;u++)if(s(t,f[u],e)||s(r,f[u],e)){i=f[u];break}if(s(t,i,e))return l[t][i][e];for(var o,h,d,p;t.length>2&&(o=t.length,h=t.split(/[\s_]+/),d=h[h.length-1],p=d.length,1!==h.length);)if(t=t.substring(0,o-(p+1)),s(t,i,e))return l[t][i][e];return s(r,i,e)?l[r][i][e]:e}function s(e,a,s){return e in l&&(a in l[e]&&s in l[e][a])}function n(e,a,s){var n,t,i=[],l=[],f=e.split(d.pluralSeparator),p=[];for(n=0;n<f.length;n++){var m=f[n];o.test(m)?(p=m.match(o),i[p[0]]=p[p.length-1]):u.test(m)?(p=m.match(u),l.push(p[1])):l.push(m)}for(t in i)if(h.test(t))if(p=t.match(h),p[1]){var g,b=p[2].split(",");for(g in b)if(a==b[g])return i[t]}else{var v=c(p[4]),k=c(p[5]);if(("["===p[3]?a>=v:a>v)&&("]"===p[6]?a<=k:a<k))return i[t]}return l[r(a,s)]||l[0]||void 0}function c(e){return"-Inf"===e?Number.NEGATIVE_INFINITY:"+Inf"===e||"Inf"===e?Number.POSITIVE_INFINITY:parseInt(e,10)}function r(e,a){var s=a;switch("pt_BR"===s&&(s="xbr"),s.length>3&&(s=s.split("_")[0]),s){case"bo":case"dz":case"id":case"ja":case"jv":case"ka":case"km":case"kn":case"ko":case"ms":case"th":case"tr":case"vi":case"zh":return 0;case"af":case"az":case"bn":case"bg":case"ca":case"da":case"de":case"el":case"en":case"eo":case"es":case"et":case"eu":case"fa":case"fi":case"fo":case"fur":case"fy":case"gl":case"gu":case"ha":case"he":case"hu":case"is":case"it":case"ku":case"lb":case"ml":case"mn":case"mr":case"nah":case"nb":case"ne":case"nl":case"nn":case"no":case"om":case"or":case"pa":case"pap":case"ps":case"pt":case"so":case"sq":case"sv":case"sw":case"ta":case"te":case"tk":case"ur":case"zu":return 1==e?0:1;case"am":case"bh":case"fil":case"fr":case"gun":case"hi":case"ln":case"mg":case"nso":case"xbr":case"ti":case"wa":return 0===e||1==e?0:1;case"be":case"bs":case"hr":case"ru":case"sr":case"uk":return e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2;case"cs":case"sk":return 1==e?0:e>=2&&e<=4?1:2;case"ga":return 1==e?0:2==e?1:2;case"lt":return e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2;case"sl":return e%100==1?0:e%100==2?1:e%100==3||e%100==4?2:3;case"mk":return e%10==1?0:1;case"mt":return 1==e?0:0===e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3;case"lv":return 0===e?0:e%10==1&&e%100!=11?1:2;case"pl":return 1==e?0:e%10>=2&&e%10<=4&&(e%100<12||e%100>14)?1:2;case"cy":return 1==e?0:2==e?1:8==e||11==e?2:3;case"ro":return 1==e?0:0===e||e%100>0&&e%100<20?1:2;case"ar":return 0===e?0:1==e?1:2==e?2:e>=3&&e<=10?3:e>=11&&e<=99?4:5;default:return 0}}function t(e,a){for(var s=0;s<e.length;s++)if(a===e[s])return!0;return!1}function i(){if("undefined"!=typeof document)return document.documentElement.lang.replace("-","_")}var l={},f=[],u=new RegExp(/^\w+\: +(.+)$/),o=new RegExp(/^\s*((\{\s*(\-?\d+[\s*,\s*\-?\d+]*)\s*\})|([\[\]])\s*(-Inf|\-?\d+)\s*,\s*(\+?Inf|\-?\d+)\s*([\[\]]))\s?(.+?)$/),h=new RegExp(/^\s*(\{\s*(\-?\d+[\s*,\s*\-?\d+]*)\s*\})|([\[\]])\s*(-Inf|\-?\d+)\s*,\s*(\+?Inf|\-?\d+)\s*([\[\]])/),d={locale:i(),fallback:"en",placeHolderPrefix:"%",placeHolderSuffix:"%",defaultDomain:"messages",pluralSeparator:"|",add:function(e,a,s,n){var c=n||this.locale||this.fallback,r=s||this.defaultDomain;return l[c]||(l[c]={}),l[c][r]||(l[c][r]={}),l[c][r][e]=a,!1===t(f,r)&&f.push(r),this},trans:function(s,n,c,r){var t=a(s,c,r,this.locale,this.fallback);return e(t,n||{})},transChoice:function(s,c,r,t,i){var l=a(s,t,i,this.locale,this.fallback),f=parseInt(c,10);return"undefined"==typeof l||isNaN(f)||(l=n(l,f,i||this.locale||this.fallback)),e(l,r||{})},fromJSON:function(e){if("string"==typeof e&&(e=JSON.parse(e)),e.locale&&(this.locale=e.locale),e.fallback&&(this.fallback=e.fallback),e.defaultDomain&&(this.defaultDomain=e.defaultDomain),e.translations)for(var a in e.translations)for(var s in e.translations[a])for(var n in e.translations[a][s])this.add(n,e.translations[a][s][n],s,a);return this},reset:function(){l={},f=[],this.locale=i()}};return d});
(function (Translator) {
    Translator.fallback      = 'en';
    Translator.defaultDomain = 'messages';
})(Translator);

(function (Translator) {
    // fr
    Translator.add("A", "La", "messages", "fr");
    Translator.add("A#", "La#", "messages", "fr");
    Translator.add("A##", "La##", "messages", "fr");
    Translator.add("A#\/Bb", "A#\/Bb", "messages", "fr");
    Translator.add("Ab", "Lab", "messages", "fr");
    Translator.add("Abb", "Labb", "messages", "fr");
    Translator.add("Available necks", "Manches disponibles", "messages", "fr");
    Translator.add("B", "Si", "messages", "fr");
    Translator.add("B#", "Si#", "messages", "fr");
    Translator.add("B##", "Si##", "messages", "fr");
    Translator.add("Bb", "Sib", "messages", "fr");
    Translator.add("Bbb", "Sibb", "messages", "fr");
    Translator.add("C", "Do", "messages", "fr");
    Translator.add("C#", "Do#", "messages", "fr");
    Translator.add("C##", "Do##", "messages", "fr");
    Translator.add("C#\/Db", "C#\/Db", "messages", "fr");
    Translator.add("Cb", "Dob", "messages", "fr");
    Translator.add("Cbb", "Dobb", "messages", "fr");
    Translator.add("D", "Re", "messages", "fr");
    Translator.add("D#", "Re#", "messages", "fr");
    Translator.add("D##", "Re##", "messages", "fr");
    Translator.add("D#\/Eb", "D#\/Eb", "messages", "fr");
    Translator.add("Db", "Reb", "messages", "fr");
    Translator.add("Dbb", "Rebb", "messages", "fr");
    Translator.add("Diagram:", "Diagram:", "messages", "fr");
    Translator.add("E", "Mi", "messages", "fr");
    Translator.add("E#", "Mi#", "messages", "fr");
    Translator.add("E##", "E##", "messages", "fr");
    Translator.add("Eb", "Mib", "messages", "fr");
    Translator.add("Ebb", "Mibb", "messages", "fr");
    Translator.add("F", "Fa", "messages", "fr");
    Translator.add("F#", "Fa#", "messages", "fr");
    Translator.add("F##", "Fa##", "messages", "fr");
    Translator.add("F#\/Gb", "F#\/Gb", "messages", "fr");
    Translator.add("Fb", "Fab", "messages", "fr");
    Translator.add("Fbb", "Fabb", "messages", "fr");
    Translator.add("G", "Sol", "messages", "fr");
    Translator.add("G#", "Sol#", "messages", "fr");
    Translator.add("G##", "Sol##", "messages", "fr");
    Translator.add("G#\/Ab", "G#\/Ab", "messages", "fr");
    Translator.add("Gb", "Solb", "messages", "fr");
    Translator.add("Gbb", "Solbb", "messages", "fr");
    Translator.add("Intervals", "Intervales", "messages", "fr");
    Translator.add("Major", "majeur", "messages", "fr");
    Translator.add("Matching root\/scale (%nbr%)", "Echelle\/tonique correspondantes (%nbr%)", "messages", "fr");
    Translator.add("No matching root scale ...", "Aucune echelle\/tonique trouv\u00e9e ...", "messages", "fr");
    Translator.add("Other roots:", "Autres toniques:", "messages", "fr");
    Translator.add("Scale in key off", "Echelle avec une tonique de", "messages", "fr");
    Translator.add("Welcome here... Jolineck is happy to provide tools for neck instrument players (as well as all kind of musician).", "Bienvenue ici... JoliNeck est heureux de fournir des outils aux joueurs d'instruments \u00e0 cordes (Ainsi qu'\u00e0 tous types de musiciens)", "messages", "fr");
    Translator.add("aeolian b5", "eolian b5", "messages", "fr");
    Translator.add("arabian", "arabe", "messages", "fr");
    Translator.add("auxiliary augmented (LCCTO)", "augment\u00e9 auxiliaire (LCCTO)", "messages", "fr");
    Translator.add("auxiliary diminished (LCCTO)", "diminu\u00e9 auxiliaire (LCCTO)", "messages", "fr");
    Translator.add("auxiliary diminished blues (LCCTO)", "diminu\u00e9 blues auxiliaire (LCCTO)", "messages", "fr");
    Translator.add("bass", "basse", "messages", "fr");
    Translator.add("bass 5 string (low B)", "basse 5 cordes (Basse Si)", "messages", "fr");
    Translator.add("byzantine", "byzantin", "messages", "fr");
    Translator.add("diminished", "diminu\u00e9", "messages", "fr");
    Translator.add("dorian", "dorien", "messages", "fr");
    Translator.add("dorian #4", "dorien #4", "messages", "fr");
    Translator.add("dorian b2", "dorian b2", "messages", "fr");
    Translator.add("eolian", "eolien", "messages", "fr");
    Translator.add("ethiopian tizita minor", "ethiopian tizita minor", "messages", "fr");
    Translator.add("guitar", "guitare", "messages", "fr");
    Translator.add("guitar (D A D F# B E)", "guitare (Re La Re Fa# Si Mi)", "messages", "fr");
    Translator.add("guitar (D A D G Bb D)", "guitare (Re La Re Sol Sib Re)", "messages", "fr");
    Translator.add("gypsy", "gitan", "messages", "fr");
    Translator.add("harmonic minor", "mineur harmonique", "messages", "fr");
    Translator.add("icon", "icone", "messages", "fr");
    Translator.add("indian ascending", "indien ascendant", "messages", "fr");
    Translator.add("indian descending", "indien descendant", "messages", "fr");
    Translator.add("ionian", "ionien", "messages", "fr");
    Translator.add("ionian #5", "ionien #5", "messages", "fr");
    Translator.add("japanese", "japonais", "messages", "fr");
    Translator.add("jewish", "juif", "messages", "fr");
    Translator.add("locrian", "locrien", "messages", "fr");
    Translator.add("locrian #6", "locrien #6", "messages", "fr");
    Translator.add("lydian", "lydien", "messages", "fr");
    Translator.add("lydian #2", "lydien #2", "messages", "fr");
    Translator.add("lydian #5", "lydian #5", "messages", "fr");
    Translator.add("lydian (LCCTO)", "lydien (LCCTO)", "messages", "fr");
    Translator.add("lydian augmented (LCCTO)", "lydien augment\u00e9 (LCCTO)", "messages", "fr");
    Translator.add("lydian b7 (LCCTO)", "lydien b7 (LCCTO)", "messages", "fr");
    Translator.add("lydian diminished (LCCTO)", "lydien diminu\u00e9 (LCCTO)", "messages", "fr");
    Translator.add("lydian dominant", "lydien dominant", "messages", "fr");
    Translator.add("melodic minor", "mineur m\u00e9lodique", "messages", "fr");
    Translator.add("mixolydian", "mixolydien", "messages", "fr");
    Translator.add("mixolydian b6", "mixolydien b6", "messages", "fr");
    Translator.add("monostring (C)", "monocorde (Do)", "messages", "fr");
    Translator.add("oriental", "orientale", "messages", "fr");
    Translator.add("pentatonic", "pentatonique", "messages", "fr");
    Translator.add("pentatonic major", "pentatonique majeur", "messages", "fr");
    Translator.add("pentatonic major b2", "pentatonique majeur b2", "messages", "fr");
    Translator.add("pentatonic minor", "pentatonique mineur", "messages", "fr");
    Translator.add("pentatonic minor 6", "pentatonique mineur 6", "messages", "fr");
    Translator.add("pentatonic minor b5", "pentatonique mineur b5", "messages", "fr");
    Translator.add("pentatonic minor blues", "pentatonique mineur blues", "messages", "fr");
    Translator.add("pentatonic whole tone", "pentatonique whole tone", "messages", "fr");
    Translator.add("persian", "perse", "messages", "fr");
    Translator.add("phrygian", "phrygien", "messages", "fr");
    Translator.add("phrygian dominant", "phrygien dominant", "messages", "fr");
    Translator.add("romanian", "roumaine", "messages", "fr");
    Translator.add("scale", "echelle", "messages", "fr");
    Translator.add("superlocrian", "superlocrien", "messages", "fr");
    Translator.add("tagged as:", "tagged as:", "messages", "fr");
    Translator.add("ukulele soprano", "ukulele soprano", "messages", "fr");
    Translator.add("violin", "violon", "messages", "fr");
    Translator.add("whole tone", "whole tone", "messages", "fr");
})(Translator);
